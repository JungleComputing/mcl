/*
 * Copyright 2014 Pieter Hijma
 *
 * This file is part of MCL.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */



module blackscholes

import perfect;
import math;

perfect float cnd(float d) {
    const float       a1 = 0.31938153;
    const float       a2 = 0-0.356563782;
    const float       a3 = 1.781477937;
    const float       a4 = 0-1.821255978;
    const float       a5 = 1.330274429;
    const float rsqrt2pi = 0.39894228040143267793994605993438;

    const float
        k = 1.0 / (1.0 + 0.2316419 * fabs(d));

    const float
        cnd = rsqrt2pi * exp((0- 0.5) * d * d) *
        (k * (a1 + k * (a2 + k * (a3 + k * (a4 + k * a5)))));

    if(d > 0)
        return 1.0 - cnd;

    return cnd;
}

perfect void blackscholes(int size, float[size] callresult, float[size] putresult,
		float[size] stockprice, float[size] optionstrike, float[size] optionyears, float riskfree, float volatility) {
	foreach (int i in size threads) {
		float s = stockprice[i];
		float x = optionstrike[i];
		float t = optionyears[i];
		float r = riskfree;
		float v = volatility;
		
    	float sqrtt = sqrt(t);
    	float    d1 = (log(s / x) + (r + 0.5 * v * v) * t) / (v * sqrtt);
    	float    d2 = d1 - v * sqrtt;
    	float cndd1 = cnd(d1);
    	float cndd2 = cnd(d2);

    	//Calculate Call and Put simultaneously
    	float exprt = exp(0 - r * t);
    	callresult[i] = s * cndd1 - x * exprt * cndd2;
    	putresult[i]  = x * exprt * (1.0 - cndd2) - s * (1.0 - cndd1);
	}
}
/*
INFO at |project://mcl/input/programs/BlackScholes.mcl|(612,12,<27,13>,<27,25>): computation:
  threads:
    loads: 
      main: 3*size
    instructions: 
      69*size
    stores: 
      main: 2*size
INFO at |project://mcl/input/programs/BlackScholes.mcl|(65,3,<6,14>,<6,17>): computation:
  host:
    instructions: 
      22
*/

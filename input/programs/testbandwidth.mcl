/*
 * Copyright 2014 Pieter Hijma
 *
 * This file is part of MCL.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */



module testbandwidth


import perfect;


perfect void testBandwidth(int n, float[n] b, float[n] a) {
	foreach (int i in n threads) {
		b[i] = a[i];
	}
}

/*
import perfect;

perfect void testBandwidth(int n, float r, float[n] a) {
	foreach (int i in n threads) {
		float k = a[i];
		if (i < 1) {
			r = k;
		}
	}
}




import perfect;
import nvidia;





nvidia void testBandwidth(const int n, float r, const float[n] a) {
    const int nrThreadsN = 128;
    const int nrBlocksN = n / (1 * nrThreadsN);
    foreach (const int bi in nrBlocksN blocks) {
        foreach (const int ti in nrThreadsN threads) {
            const int i = bi * (1 * nrThreadsN) + ti;
            const float k = a[i];
            if (i < 1) {
                r = k;
            }
        }
    }
}



*/
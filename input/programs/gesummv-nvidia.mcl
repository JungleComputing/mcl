/*
 * Copyright 2014 Pieter Hijma
 *
 * This file is part of MCL.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */



module gesummv


import perfect;
import accelerator;
import gpu;
import nvidia;


// The result of translating gesummv-gpu-v1 to nvidia level.


nvidia void gesummv(const int n = 4096, const float[n,n] a, const float[n,n] b, const 
        float[n] x, float[n] y, const float alpha, const float beta) {
    const int nrThreadsN = gpu.hierarchy.blocks.block.threads.max_nr_units;
    const int nrBlocksN = n / (1 * nrThreadsN);
    foreach (const int bi in nrBlocksN blocks) {
        shared float[n] xcopy;
        foreach (const int ti in nrThreadsN threads) {
            for (local int l = ti; l < n; l += nrThreadsN) {
                xcopy[l] = x[l];
            }
            barrier(shared);
            const int i = bi * (1 * nrThreadsN) + ti;
            local float sum1 = 0.0;
            local float sum2 = 0.0;
            for (local int k = 0; k < n; k++) {
                sum1 = sum1 + a[i,k] * xcopy[k];
                sum2 = sum2 + b[i,k] * xcopy[k];
            }
            y[i] = alpha * sum1 + beta * sum2;
        }
    }
}

/*

INFO at |project://mcl/input/programs/gesummv-nvidia.mcl|(175,1,<13,30>,<13,31>): An example value for n is needed for performance evaluation
INFO at |project://mcl/input/programs/gesummv-nvidia.mcl|(551,7,<19,44>,<19,51>): using shared memory: Try to maximize the # blocks per SMP. This depends on the number of threads, amount of shared memory and the number of registers. Now using 1 of 8 blocks

INFO at |project://mcl/input/programs/gesummv-nvidia.mcl|(157,7,<13,12>,<13,19>): Memory on_chip is shared by more than one block, carefully consider the usage of memory spaces {"shared"}
INFO at |project://mcl/input/programs/gesummv-nvidia.mcl|(493,5,<18,24>,<18,29>): Multiple elements of xcopy are loaded into shared memory, but there is only one store/load phase. It may be benificial to store/load in multiple phases because the memory is a scarce resource.


*/


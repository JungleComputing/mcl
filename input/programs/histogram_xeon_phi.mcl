/*
 * Copyright 2014 Pieter Hijma
 *
 * This file is part of MCL.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */



module histogram


import perfect;
import atomics;
import mic;
import xeon_phi;





xeon_phi void histogram(const int nrBuckets, const int m, const int n, 
        int[nrBuckets] hist, const int[m,n] data) {
    const int nrVectorsN = mic.hierarchy.threads.thread.vectors.nr_units;
    const int nrElsM = 32;
    const int nrThreadsM = m / nrElsM;
    const int nrElsN = 128;
    const int nrThreadsN = n / (nrVectorsN * nrElsN);
    data as int[nrThreadsM,nrThreadsN][nrElsM,nrElsN][1,nrVectorsN] data2;
    foreach (const int ti in nrThreadsM threads) {
        foreach (const int tj in nrThreadsN threads) {
            foreach (const int vj in nrVectorsN vectors) {
                int[nrBuckets] hist2;
                for (int i = 0; i < nrBuckets; i++) {
                    hist2[i] = 0;
                }
                for (int ei = 0; ei < nrElsM; ei++) {
                    for (int ej = 0; ej < nrElsN; ej++) {
                        const int d = data2[ti,tj][ei,ej][0,vj];
                        hist2[d] = hist2[d] + 1;
                    }
                }
                for (int i = 0; i < nrBuckets; i++) {
                    atomicAdd(hist[i], hist2[i]);
                }
            }
        }
    }
}


/*
INFO at |project://mcl/input/programs/histogram_xeon_phi.mcl|(1026,5,<31,35>,<31,40>): Data reuse: For hist2[d]:
    the loops int ei = 0, int ej = 0 may have a positive data reuse ratio: 4096 / (d + 1)
INFO at |project://mcl/input/programs/histogram_xeon_phi.mcl|(1164,4,<35,30>,<35,34>): Data reuse: For hist[i]:
    the loops const int ti, int i = 0 may have a positive data reuse ratio: m / 64
    the loops const int ti, const int tj may have a positive data reuse ratio: m * n / 65536
    the loops const int tj, int i = 0 may have a positive data reuse ratio: n / 1024
    the loops const int vj, int i = 0  have a positive data reuse ratio: 16
    the loops const int ti, const int vj may have a positive data reuse ratio: m / 4
    the loops const int tj, const int vj may have a positive data reuse ratio: n / 64


INFO at |project://mcl/input/programs/histogram_xeon_phi.mcl|(1019,5,<31,24>,<31,29>): Var hist2[d]:
  in loop ej:
    may benefit from cache l1_cache:
      best case: 1 cache line fetches
      worst case: 64 cache line fetches
  in foreach loop vj:
    does benefit from cache l1_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/histogram_xeon_phi.mcl|(968,5,<30,38>,<30,43>): Var data2[ti,tj][ei,ej][0,vj]:
  in loop ej:
    does not benefit from cache l1_cache:
      64 cache line fetches
  in foreach loop vj:
    does benefit from cache l1_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/histogram_xeon_phi.mcl|(1019,5,<31,24>,<31,29>): Var hist2[d]:
  in loop ej:
    may benefit from cache l2_cache:
      best case: 1 cache line fetches
      worst case: 64 cache line fetches
  in foreach loop vj:
    does benefit from cache l2_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/histogram_xeon_phi.mcl|(99,9,<13,14>,<13,23>): This is a cache-oriented architecture. Make sure that each access benefits from the cache(s)
INFO at |project://mcl/input/programs/histogram_xeon_phi.mcl|(968,5,<30,38>,<30,43>): Var data2[ti,tj][ei,ej][0,vj]:
  in loop ej:
    does not benefit from cache l2_cache:
      64 cache line fetches
  in foreach loop vj:
    does benefit from cache l2_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/histogram_xeon_phi.mcl|(1168,4,<35,30>,<35,34>): Var hist[i]:
  in loop i:
    may benefit from cache l2_cache:
      best case: nrBuckets / 16 cache line fetches
      worst case: nrBuckets cache line fetches
  in foreach loop vj:
    does benefit from cache l2_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/histogram_xeon_phi.mcl|(705,5,<24,35>,<24,40>): for declaration hist2 with size 4 * nrBuckets bytes, if possible, try to adjust the size in relation to:
  for cache l1_cache:
    the capacity: 32 kB
    the cache line size: 64 B
  for cache l2_cache:
    the capacity: 512 kB
    the cache line size: 64 B
INFO at |project://mcl/input/programs/histogram_xeon_phi.mcl|(1030,5,<31,35>,<31,40>): Var hist2[d]:
  in loop ej:
    may benefit from cache l1_cache:
      best case: 1 cache line fetches
      worst case: 64 cache line fetches
  in foreach loop vj:
    does benefit from cache l1_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/histogram_xeon_phi.mcl|(1168,4,<35,30>,<35,34>): Var hist[i]:
  in loop i:
    may benefit from cache l1_cache:
      best case: nrBuckets / 16 cache line fetches
      worst case: nrBuckets cache line fetches
  in foreach loop vj:
    does benefit from cache l1_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/histogram_xeon_phi.mcl|(1030,5,<31,35>,<31,40>): Var hist2[d]:
  in loop ej:
    may benefit from cache l2_cache:
      best case: 1 cache line fetches
      worst case: 64 cache line fetches
  in foreach loop vj:
    does benefit from cache l2_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/histogram_xeon_phi.mcl|(1177,5,<35,39>,<35,44>): Var hist2[i]:
  in loop i:
    may benefit from cache l2_cache:
      best case: nrBuckets / 16 cache line fetches
      worst case: nrBuckets cache line fetches
  in foreach loop vj:
    does benefit from cache l2_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/histogram_xeon_phi.mcl|(786,5,<26,20>,<26,25>): Var hist2[i]:
  in loop i:
    may benefit from cache l1_cache:
      best case: nrBuckets / 16 cache line fetches
      worst case: nrBuckets cache line fetches
  in foreach loop vj:
    does benefit from cache l1_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/histogram_xeon_phi.mcl|(786,5,<26,20>,<26,25>): Var hist2[i]:
  in loop i:
    may benefit from cache l2_cache:
      best case: nrBuckets / 16 cache line fetches
      worst case: nrBuckets cache line fetches
  in foreach loop vj:
    does benefit from cache l2_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/histogram_xeon_phi.mcl|(1177,5,<35,39>,<35,44>): Var hist2[i]:
  in loop i:
    may benefit from cache l1_cache:
      best case: nrBuckets / 16 cache line fetches
      worst case: nrBuckets cache line fetches
  in foreach loop vj:
    does benefit from cache l1_cache:
      1 cache line fetches



*/
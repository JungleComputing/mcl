/*
 * Copyright 2014 Pieter Hijma
 *
 * This file is part of MCL.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */



module sparsemv


import perfect;
import mic;
import xeon_phi;





xeon_phi void sparsemv(const int n, const int m, const int nz, const int[n + 1] 
        air, const int[nz] ajc, const float[nz] avalues, const float[m] b, 
        float[n] c) {
    const int nrVectorsN = mic.hierarchy.threads.thread.vectors.nr_units;
    const int nrThreadsN = n / (1 * nrVectorsN);
    foreach (const int tarow in nrThreadsN threads) {
        foreach (const int varow in nrVectorsN vectors) {
            const int arow = tarow * (1 * nrVectorsN) + varow;
            const int start = air[arow];
            const int end = air[arow + 1];
            float sum = 0;
            for (int i = start; i < end; i++) {
                sum = sum + avalues[i] * b[ajc[i]];
            }
            c[arow] = sum;
        }
    }
}

/*
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(82,8,<12,14>,<12,22>): This is a cache-oriented architecture. Make sure that each access benefits from the cache(s)
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(782,1,<26,12>,<26,13>): Var c[arow]:
  in foreach loop varow:
    does benefit from cache l1_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(745,1,<24,41>,<24,42>): Var b[ajc[i]]:: unpredictable access pattern
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(732,7,<24,28>,<24,35>): Var avalues[i]:
  in loop i:
    may benefit from cache l1_cache:
      best case: end / 16 + start / -16 cache line fetches
      worst case: -1 * start + end cache line fetches
 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(393,5,<17,23>,<17,28>), depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(451,5,<18,27>,<18,32>))
  in foreach loop varow:
    the array index depends on the loop index, but not directly. Cache behaviour cannot be predicted.
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(747,3,<24,43>,<24,46>): Var ajc[i]:
  in loop i:
    may benefit from cache l1_cache:
      best case: end / 16 + start / -16 cache line fetches
      worst case: -1 * start + end cache line fetches
 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(393,5,<17,23>,<17,28>), depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(451,5,<18,27>,<18,32>))
  in foreach loop varow:
    the array index depends on the loop index, but not directly. Cache behaviour cannot be predicted.
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(614,3,<21,28>,<21,31>): Var air[arow + 1]:
  in foreach loop varow:
    does benefit from cache l1_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(575,3,<20,30>,<20,33>): Var air[arow]:
  in foreach loop varow:
    does benefit from cache l1_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(782,1,<26,12>,<26,13>): Var c[arow]:
  in foreach loop varow:
    does benefit from cache l2_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(745,1,<24,41>,<24,42>): Var b[ajc[i]]:: unpredictable access pattern
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(732,7,<24,28>,<24,35>): Var avalues[i]:
  in loop i:
    may benefit from cache l2_cache:
      best case: end / 16 + start / -16 cache line fetches
      worst case: -1 * start + end cache line fetches
 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(393,5,<17,23>,<17,28>), depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(451,5,<18,27>,<18,32>))
  in foreach loop varow:
    the array index depends on the loop index, but not directly. Cache behaviour cannot be predicted.
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(747,3,<24,43>,<24,46>): Var ajc[i]:
  in loop i:
    may benefit from cache l2_cache:
      best case: end / 16 + start / -16 cache line fetches
      worst case: -1 * start + end cache line fetches
 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(393,5,<17,23>,<17,28>), depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(451,5,<18,27>,<18,32>))
  in foreach loop varow:
    the array index depends on the loop index, but not directly. Cache behaviour cannot be predicted.
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(614,3,<21,28>,<21,31>): Var air[arow + 1]:
  in foreach loop varow:
    does benefit from cache l2_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(575,3,<20,30>,<20,33>): Var air[arow]:
  in foreach loop varow:
    does benefit from cache l2_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(82,8,<12,14>,<12,22>): pcie transfers 4 * m + (4 * n + 8 * nz) + 16 bytes from host to device
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(82,8,<12,14>,<12,22>): pcie transfers 4 * n bytes from device to host
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(747,3,<24,43>,<24,46>): Data reuse: For ajc[i]:
    the loops const int varow, int i = start may have a positive data reuse ratio: (16 * end + -16 * start) / (end + -1 * start)
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(745,1,<24,41>,<24,42>): Data reuse: For b[ajc[i]]:
    the loops const int varow, int i = start may have a positive data reuse ratio: (16 * end + -16 * start) / (ajc[((i))] + 1)
    the loops const int tarow, const int varow may have a positive data reuse ratio: n / (ajc[((i))] + 1)
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(732,7,<24,28>,<24,35>): Data reuse: For avalues[i]:
    the loops const int varow, int i = start may have a positive data reuse ratio: (16 * end + -16 * start) / (end + -1 * start)
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(614,3,<21,28>,<21,31>): Data reuse: For air[arow + 1]:
    the loops const int tarow, const int varow may have a positive data reuse ratio: n / (n + 1)
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(82,8,<12,14>,<12,22>): computation:
  vectors:
    loads: 
      dev: 2*nrThreadsN*nrVectorsN*(-start+end) (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(393,5,<17,23>,<17,28>), depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(451,5,<18,27>,<18,32>))
    instructions: 
      2*nrThreadsN*nrVectorsN*(-start+end) (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(393,5,<17,23>,<17,28>), depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(451,5,<18,27>,<18,32>))
    stores: 
      dev: nrThreadsN*nrVectorsN (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(393,5,<17,23>,<17,28>), depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(451,5,<18,27>,<18,32>))
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(82,8,<12,14>,<12,22>): indexing:
  vectors:
    loads: 
      dev: nrThreadsN*nrVectorsN*(-start+end) (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(393,5,<17,23>,<17,28>), depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(451,5,<18,27>,<18,32>))
    instructions: 
      nrThreadsN*nrVectorsN (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(393,5,<17,23>,<17,28>), depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(451,5,<18,27>,<18,32>))
    stores: 
      dev: 0 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(393,5,<17,23>,<17,28>), depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(451,5,<18,27>,<18,32>))
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(82,8,<12,14>,<12,22>): control flow:
  host:
    instructions: 
      2
  vectors:
    loads: 
      dev: 2*nrThreadsN*nrVectorsN
    instructions: 
      2*nrThreadsN*nrVectorsN*(-start+end)+3*nrThreadsN*nrVectorsN (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(393,5,<17,23>,<17,28>), depends on loop at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(451,5,<18,27>,<18,32>))
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(82,8,<12,14>,<12,22>): Arithmetic intensity: 2*nrThreadsN*nrVectorsN*(-start+end)*(2*nrThreadsN*nrVectorsN*(-start+end)+nrThreadsN*nrVectorsN)^(
-1)
INFO at |project://mcl/input/programs/sparsemv-xeon_phi.mcl|(242,1,<14,17>,<14,18>): It may be beneficial to consider computing more than one element of c per vector.
*/
/*
 * Copyright 2014 Pieter Hijma
 *
 * This file is part of MCL.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */



module histogram


import perfect;
import atomics;
import gpu;



// In this version, the amount of work per thread is increased, by having each thread
// deal with 512 elements.

gpu void histogram(const int nrBuckets, const int m, const int n, 
        int[nrBuckets] hist, const int[m,n] data) {

	const int blocksize = 512;
    const int nrThreadsN = gpu.hierarchy.blocks.block.threads.max_nr_units;
    const int nrBlocksN = n / (1 * nrThreadsN);
    foreach (const int i in m/blocksize blocks) {
    
        foreach (const int bj in nrBlocksN blocks) {

            foreach (const int tj in nrThreadsN threads) {
            
                const int j = bj * (1 * nrThreadsN) + tj;
                for (int k = 0; k < blocksize; k++) {
                	const int d = data[i*blocksize+k, j];
                	atomicAdd(hist[d], 1);
                }
            }
        }
    }
}

/*
 
INFO at |project://mcl/input/programs/histogram_gpu_v1.mcl|(827,4,<28,27>,<28,31>): Data reuse: For hist[d]:
    the loops const int i, int k = 0 may have a positive data reuse ratio: m / (d + 1)
    the loops const int bj, int k = 0 may have a positive data reuse ratio: n / (d + 1) / 2
    the loops const int bj, const int tj may have a positive data reuse ratio: n / (d + 1)
    the loops const int i, const int tj may have a positive data reuse ratio: 2 * m / (d + 1)
    the loops const int tj, int k = 0 may have a positive data reuse ratio: 524288 / (d + 1)
    the loops const int i, const int bj may have a positive data reuse ratio: m * n / (d + 1) / 524288
 
 
 openCL.run(NDRange(512, 1024), NDRange(32, 32)
histogramKernel          : avg =  144 ms, total =  144 ms, count =         1

#GFLOPS: 1.8635 GFLOPS
Effective Bandwidth: 6.9422 GB/s
Bandwidth: 6.9422 GB/s
 */
 
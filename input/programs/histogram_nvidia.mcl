/*
 * Copyright 2014 Pieter Hijma
 *
 * This file is part of MCL.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */



module histogram


import perfect;
import atomics;
import gpu;
import nvidia;





nvidia void histogram(const int nrBuckets = 256, const int m = 2048, 
		const int n = 2048, 
        int[nrBuckets] hist, const int[m,n] data) {
    const int blocksize = 512;
    const int nrThreadsN = nrBuckets;
    const int nrBlocksN = n / (1 * nrThreadsN);
    foreach (const int i in m / blocksize blocks) {
        foreach (const int bj in nrBlocksN blocks) {
            shared int[nrBuckets] local_hist;
            foreach (const int tj in nrThreadsN threads) {
                local_hist[tj] = 0;
                barrier(shared);
                const int j = bj * (1 * nrThreadsN) + tj;
                for (local int k = 0; k < blocksize; k++) {
                    const int d = data[i * blocksize + k,j];
                    atomicAdd(local_hist[d], 1);
                }
                barrier(shared);
                atomicAdd(hist[tj], local_hist[tj]);
            }
        }
    }
}


/*

INFO at |project://mcl/input/programs/histogram_nvidia.mcl|(115,9,<13,32>,<13,41>): An example value for nrBuckets is needed for performance evaluation

INFO at |project://mcl/input/programs/histogram_nvidia.mcl|(906,4,<30,26>,<30,30>): Data reuse: For hist[tj]:
    the loops const int i, const int bj may have a positive data reuse ratio: m * n / nrBuckets / 512
    the loops const int bj, const int tj may have a positive data reuse ratio: n / nrBuckets
    the loops const int i, const int tj may have a positive data reuse ratio: m / 512
INFO at |project://mcl/input/programs/histogram_nvidia.mcl|(95,9,<13,12>,<13,21>): Memory on_chip is shared by more than one block, carefully consider the usage of memory spaces {"shared"}

INFO at |project://mcl/input/programs/histogram_nvidia.mcl|(544,7,<22,48>,<22,55>): using shared memory: Try to maximize the # blocks per SMP. This depends on the number of threads, amount of shared memory and the number of registers. Now using 4 of 8 blocks


*/
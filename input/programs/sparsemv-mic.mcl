/*
 * Copyright 2014 Pieter Hijma
 *
 * This file is part of MCL.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */



module sparsemv


import perfect;
import mic;





mic void sparsemv(const int n, const int m, const int nz, const int[n + 1] air, 
        const int[nz] ajc, const float[nz] avalues, const float[m] b, float[n] 
        c) {
    const int nrVectorsN = mic.hierarchy.threads.thread.vectors.nr_units;
    const int nrThreadsN = n / (1 * nrVectorsN);
    foreach (const int tarow in nrThreadsN threads) {
        foreach (const int varow in nrVectorsN vectors) {
            const int arow = tarow * (1 * nrVectorsN) + varow;
            c[arow] = 0;
            for (int i = air[arow]; i < air[arow + 1]; i++) {
                c[arow] = c[arow] + avalues[i] * b[ajc[i]];
            }
        }
    }
}

/*
INFO at |project://mcl/input/programs/sparsemv-mic.mcl|(60,8,<11,9>,<11,17>): pcie transfers 4 * m + (4 * n + 8 * nz) + 16 bytes from host to device
INFO at |project://mcl/input/programs/sparsemv-mic.mcl|(60,8,<11,9>,<11,17>): pcie transfers 4 * n bytes from device to host
INFO at |project://mcl/input/programs/sparsemv-mic.mcl|(659,1,<21,49>,<21,50>): Data reuse: For b[ajc[i]]:
    the loops const int tarow, const int varow may have a positive data reuse ratio: n / (ajc[((i))] + 1)
    the loops const int varow, int i = air[arow] may have a positive data reuse ratio: (-16 * air[((arow))] + 16 * air[((1) + (arow))]) / (ajc[((i))] + 1)
INFO at |project://mcl/input/programs/sparsemv-mic.mcl|(636,1,<21,26>,<21,27>): Data reuse: c[arow] is accessed inside for-loop with index i but does not depend on it.
INFO at |project://mcl/input/programs/sparsemv-mic.mcl|(588,3,<20,40>,<20,43>): Data reuse: air[arow + 1] is accessed inside for-loop with index i but does not depend on it.
INFO at |project://mcl/input/programs/sparsemv-mic.mcl|(573,3,<20,25>,<20,28>): Data reuse: air[arow] is accessed inside for-loop with index i but does not depend on it.
INFO at |project://mcl/input/programs/sparsemv-mic.mcl|(60,8,<11,9>,<11,17>): computation:
  vectors:
    loads: 
      dev: 3*nrThreadsN*nrVectorsN*(air[arow+1]-air[arow]) (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(371,5,<16,23>,<16,28>), depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(429,5,<17,27>,<17,32>))
    instructions: 
      2*nrThreadsN*nrVectorsN*(air[arow+1]-air[arow]) (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(371,5,<16,23>,<16,28>), depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(429,5,<17,27>,<17,32>))
    stores: 
      dev: nrThreadsN*nrVectorsN*(air[arow+1]-air[arow])+nrThreadsN*nrVectorsN (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(371,5,<16,23>,<16,28>), depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(429,5,<17,27>,<17,32>))
INFO at |project://mcl/input/programs/sparsemv-mic.mcl|(60,8,<11,9>,<11,17>): indexing:
  vectors:
    loads: 
      dev: nrThreadsN*nrVectorsN*(air[arow+1]-air[arow]) (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(371,5,<16,23>,<16,28>), depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(429,5,<17,27>,<17,32>))
    instructions: 
      nrThreadsN*nrVectorsN*(air[arow+1]-air[arow]) (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(371,5,<16,23>,<16,28>), depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(429,5,<17,27>,<17,32>))
    stores: 
      dev: 0 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(371,5,<16,23>,<16,28>), depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(429,5,<17,27>,<17,32>))
INFO at |project://mcl/input/programs/sparsemv-mic.mcl|(60,8,<11,9>,<11,17>): control flow:
  host:
    instructions: 
      2
  vectors:
    loads: 
      dev: nrThreadsN*nrVectorsN*(air[arow+1]-air[arow])+nrThreadsN*nrVectorsN (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(371,5,<16,23>,<16,28>), depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(429,5,<17,27>,<17,32>))
    instructions: 
      2*nrThreadsN*nrVectorsN*(air[arow+1]-air[arow])+3*nrThreadsN*nrVectorsN (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(371,5,<16,23>,<16,28>), depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(429,5,<17,27>,<17,32>))
    stores: 
      dev: 0 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(371,5,<16,23>,<16,28>), depends on loop at |project://mcl/input/programs/sparsemv-mic.mcl|(429,5,<17,27>,<17,32>))
INFO at |project://mcl/input/programs/sparsemv-mic.mcl|(60,8,<11,9>,<11,17>): Arithmetic intensity: 2*nrThreadsN*nrVectorsN*(air[arow+1]-air[arow])*(4*nrThreadsN*nrVectorsN*(air[arow+
1]-air[arow])+nrThreadsN*nrVectorsN)^(-1)

openCL.run(NDRange(65536), NDRange(16)
pre                      : avg =  6.3 ms, total = 18.9 ms, count =         3

sparsemvKernel           : avg = 6.41 ms, total = 6.41 ms, count =         1

sparsemvKernel           : avg = 6.34 ms, total = 12.7 ms, count =         2

sparsemvKernel           : avg = 6.35 ms, total = 19.1 ms, count =         3

sparsemvKernel           : avg = 6.36 ms, total = 25.4 ms, count =         4

sparsemvKernel           : avg = 6.33 ms, total = 31.6 ms, count =         5

Bandwidth: 10.273 GB/s
*/


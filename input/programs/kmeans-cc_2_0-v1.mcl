/*
 * Copyright 2014 Pieter Hijma
 *
 * This file is part of MCL.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

module kmeans




import perfect;
import gpu;
import nvidia;
import cc_2_0;










cc_2_0 void kmeans_kernel(const int npoints, const int nclusters, const int 
        nfeatures, const global float[nfeatures,npoints] points, const global 
        float[nclusters,nfeatures] clusters, global int[npoints] 
        pointsCluster) {
    const int nPointsPerThread = 16;
    const int nrThreadsNpoints = gpu.hierarchy.blocks.block.threads.
            max_nr_units;
    const int nrBlocksNpoints = (npoints + nrThreadsNpoints * nPointsPerThread 
            - 1) / (1 * nrThreadsNpoints * nPointsPerThread);

    foreach (const int bpid in nrBlocksNpoints blocks) {
        const int nrThreadsNrThreadsNpoints = cc_2_0.hierarchy.blocks.block.
                warps.warp.threads.nr_units;
        const int nrWarpsNrThreadsNpoints = nrThreadsNpoints / (1 * 
                nrThreadsNrThreadsNpoints);
        foreach (const int wtpid in nrWarpsNrThreadsNpoints warps) {
            foreach (const int ttpid in nrThreadsNrThreadsNpoints threads) {
                const int tpid = wtpid * (1 * nrThreadsNrThreadsNpoints * nPointsPerThread) + 
                        ttpid;
                 for (local int p = 0; p < nPointsPerThread; p++) {
                	const int pid = bpid * (1 * nrThreadsNpoints * 
	                    nPointsPerThread) + p * nrThreadsNrThreadsNpoints + tpid;
	                local int ind = 0;
	                local float min_dist = 3.0E+38;
	                
	                if (pid < npoints) {
	                    float[nfeatures] point;
	                    for(local int feature = 0; feature < nfeatures; 
	                               feature++) {
	                        point[feature] = points[feature, pid];
	                    }

                        for (local int cluster = 0; cluster < nclusters; 
                                cluster++) {
                            local float dist = 0;
                            for (local int feature = 0; feature < nfeatures; 
                                    feature++) {
                                const float d = point[feature] - clusters[cluster,feature];
                                dist = dist + d * d;
                            }
                            if (dist < min_dist) {
                                min_dist = dist;
                                ind = cluster;
                            }
	                    }
	                
	                	pointsCluster[pid] = ind;
	                }
                }
            }
        }
    }
}
/*
INFO at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(2480,13,<66,18>,<66,31>): Var pointsCluster[pid]:
  in loop p:
    does not benefit from cache l1_cache:
      16 cache line fetches
  in foreach loop ttpid:
    does benefit from cache l1_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(2134,8,<57,65>,<57,73>): Var clusters[cluster,feature]:
  in loop feature:
    may benefit from cache l1_cache:
      best case: nfeatures / 32 cache line fetches
      worst case: nfeatures cache line fetches
  in foreach loop ttpid:
    does benefit from cache l1_cache:
      1 cache line fetch
INFO at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(1727,6,<49,42>,<49,48>): Var points[feature,pid]:
  in loop feature:
    may benefit from cache l1_cache:
      best case: nfeatures * npoints / 32 cache line fetches
      worst case: nfeatures cache line fetches
  in foreach loop ttpid:
    does benefit from cache l1_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(2480,13,<66,18>,<66,31>): Var pointsCluster[pid]:
  in loop p:
    does not benefit from cache l2_cache:
      16 cache line fetches
  in foreach loop ttpid:
    does benefit from cache l2_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(2134,8,<57,65>,<57,73>): Var clusters[cluster,feature]:
  in loop feature:
    may benefit from cache l2_cache:
      best case: nfeatures / 32 cache line fetches
      worst case: nfeatures cache line fetches
  in foreach loop ttpid:
    does benefit from cache l2_cache:
      1 cache line fetch
INFO at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(1727,6,<49,42>,<49,48>): Var points[feature,pid]:
  in loop feature:
    may benefit from cache l2_cache:
      best case: nfeatures * npoints / 32 cache line fetches
      worst case: nfeatures cache line fetches
  in foreach loop ttpid:
    does benefit from cache l2_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(98,13,<20,12>,<20,25>): pcie transfers 4 * (nclusters * nfeatures) + 4 * (nfeatures * npoints) + 12 bytes from host to device
INFO at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(98,13,<20,12>,<20,25>): pcie transfers 4 * npoints bytes from device to host
INFO at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(1727,6,<49,42>,<49,48>): Data reuse: For points[feature,pid]:
  For dimension 0:
    the loops const int ttpid, local int feature = 0  have a positive data reuse ratio: 32
    the loops const int wtpid, local int feature = 0  have a positive data reuse ratio: 32
    the loops const int bpid, const int wtpid may have a positive data reuse ratio: (npoints + 16383) / 512
    the loops const int bpid, local int feature = 0 may have a positive data reuse ratio: (npoints + 16383) / 16384
    the loops local int p = 0, local int feature = 0  have a positive data reuse ratio: 16
    the loops const int ttpid, local int p = 0  have a positive data reuse ratio: 512
    the loops const int wtpid, local int p = 0  have a positive data reuse ratio: 512
    the loops const int bpid, const int ttpid may have a positive data reuse ratio: (npoints + 16383) / 512
    the loops const int wtpid, const int ttpid  have a positive data reuse ratio: 1024
    the loops const int bpid, local int p = 0 may have a positive data reuse ratio: (npoints + 16383) / 1024
  For dimension 1:
    the loops const int wtpid, local int feature = 0 may have a positive data reuse ratio: 32 * nfeatures / 15873
    the loops const int bpid, const int wtpid may have a positive data reuse ratio: (npoints + 16383) / (npoints + 15872) / 512
    the loops local int p = 0, local int feature = 0 may have a positive data reuse ratio: 16 * nfeatures / 481
    the loops const int bpid, const int ttpid may have a positive data reuse ratio: (npoints + 16383) / (npoints + 31) / 512
    the loops const int bpid, local int p = 0 may have a positive data reuse ratio: (npoints + 16383) / (npoints + 480) / 1024
INFO at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(98,13,<20,12>,<20,25>): computation:
  threads:
    loads: 
      local: 2*nPointsPerThread*nclusters*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints+nPointsPerThread*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints (may not be accurate: control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(2276,15,<60,32>,<60,47>), control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(1508,13,<45,21>,<45,34>))
      global: 0 (may not be accurate: control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(1508,13,<45,21>,<45,34>))
    instructions: 
      nPointsPerThread*nclusters*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints (may not be accurate: control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(2276,15,<60,32>,<60,47>), control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(1508,13,<45,21>,<45,34>))
    stores: 
      local: 2*nPointsPerThread*nclusters*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints+
      2*nPointsPerThread*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints (may not be accurate: control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(2276,15,<60,32>,<60,47>), control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(1508,13,<45,21>,<45,34>))
      global: nPointsPerThread*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints (may not be accurate: control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(1508,13,<45,21>,<45,34>))
INFO at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(98,13,<20,12>,<20,25>): indexing:
  threads:
    loads: 
      local: 3*nPointsPerThread*nclusters*nfeatures*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints+
      2*nPointsPerThread*nfeatures*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints (may not be accurate: control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(1508,13,<45,21>,<45,34>))
    instructions: 
      0 (may not be accurate: control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(1508,13,<45,21>,<45,34>))
    stores: 
      local: 0 (may not be accurate: control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(1508,13,<45,21>,<45,34>))
INFO at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(98,13,<20,12>,<20,25>): control flow:
  threads:
    loads: 
      local: 3*nPointsPerThread*nclusters*nfeatures*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints+
      2*nPointsPerThread*nfeatures*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints+
      2*nPointsPerThread*nclusters*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints+
      3*nPointsPerThread*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints (may not be accurate: control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(2276,15,<60,32>,<60,47>), control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(1508,13,<45,21>,<45,34>))
      global: nPointsPerThread*nclusters*nfeatures*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints+nPointsPerThread*nfeatures*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints (may not be accurate: control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(1508,13,<45,21>,<45,34>))
    instructions: 
      5*nPointsPerThread*nclusters*nfeatures*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints+
      2*nPointsPerThread*nfeatures*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints+nPointsPerThread*nclusters*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints+
      8*nPointsPerThread*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints+
      4*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints (may not be accurate: control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(2276,15,<60,32>,<60,47>), control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(1508,13,<45,21>,<45,34>))
    stores: 
      local: 2*nPointsPerThread*nclusters*nfeatures*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints+nPointsPerThread*nfeatures*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints+
      3*nPointsPerThread*nclusters*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints+
      3*nPointsPerThread*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints+nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints (may not be accurate: control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(2276,15,<60,32>,<60,47>), control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(1508,13,<45,21>,<45,34>))
      global: 0 (may not be accurate: control flow at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(1508,13,<45,21>,<45,34>))
  host:
    instructions: 
      6
  blocks:
    instructions: 
      2*nrBlocksNpoints
INFO at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(98,13,<20,12>,<20,25>): Arithmetic intensity: nPointsPerThread*nclusters*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints*(
4*nPointsPerThread*nclusters*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints+
4*nPointsPerThread*nrBlocksNpoints*nrThreadsNrThreadsNpoints*nrWarpsNrThreadsNpoints)^(
-1)
INFO at |project://mcl/input/programs/kmeans-cc_2_0-v1.mcl|(98,13,<20,12>,<20,25>): Memory on_chip is shared by more than one block, carefully consider the usage of memory spaces {"shared"}
done
*/


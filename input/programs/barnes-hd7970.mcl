/*
 * Copyright 2014 Pieter Hijma
 *
 * This file is part of MCL.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

module barnes




import perfect;
import math;
import accelerator;
import gpu;
import amd;
import hd7970;










hd7970 void computeAcceleration(const int start, const int nCompute, const int 
        nBodies, const global float[nBodies,3] positions, const global 
        float[nBodies] mass, global float[nCompute,3] accel, const float 
        softsq) {
    const int nrThreadsNCompute = 128;
    const int nrBlocksNCompute = (nCompute + nrThreadsNCompute - 1) / (1 * 
            nrThreadsNCompute);
    foreach (const int bbody in nrBlocksNCompute workgroups) {
        local float[nrThreadsNCompute] xcopy;
        local float[nrThreadsNCompute] ycopy;
        local float[nrThreadsNCompute] zcopy;
        local float[nrThreadsNCompute] mcopy;
        const int nrWorkitemsNrThreadsNCompute = hd7970.hierarchy.workgroups.
                workgroup.wavefronts.wavefront.workitems.nr_units;
        const int nrWavefrontsNrThreadsNCompute = nrThreadsNCompute / (1 * 
                nrWorkitemsNrThreadsNCompute);
        foreach (const int wtbody0 in nrWavefrontsNrThreadsNCompute 
                wavefronts) {
            foreach (const int wtbody in nrWorkitemsNrThreadsNCompute 
                    workitems) {
                const int tbody = wtbody0 * (1 * nrWorkitemsNrThreadsNCompute) 
                        + wtbody;
                const int body = bbody * (1 * nrThreadsNCompute) + tbody;
                const int bodyOffset = body + start;
                if (bodyOffset < nBodies) {
                    reg float acc0 = 0.0;
                    reg float acc1 = 0.0;
                    reg float acc2 = 0.0;
                    const float pos0 = positions[bodyOffset,0];
                    const float pos1 = positions[bodyOffset,1];
                    const float pos2 = positions[bodyOffset,2];
                    const int l = nBodies / nrThreadsNCompute * 
                            nrThreadsNCompute;
                    for (reg int k = 0; k < l; k += nrThreadsNCompute) {
                        xcopy[tbody] = positions[k + tbody,0];
                        ycopy[tbody] = positions[k + tbody,1];
                        zcopy[tbody] = positions[k + tbody,2];
                        mcopy[tbody] = mass[k + tbody];
                        barrier(local);
                        for (reg int i = 0; i < nrThreadsNCompute; i++) {
                            const float diff_x = xcopy[i] - pos0;
                            const float diff_y = ycopy[i] - pos1;
                            const float diff_z = zcopy[i] - pos2;
                            const float distsq = diff_x * diff_x + diff_y * 
                                    diff_y + diff_z * diff_z + softsq;
                            const float factor = mcopy[i] / (distsq * 
                                    sqrt(distsq));
                            acc0 = acc0 + diff_x * factor;
                            acc1 = acc1 + diff_y * factor;
                            acc2 = acc2 + diff_z * factor;
                        }
                        barrier(local);
                    }
                    if (l < nBodies) {
                        const int amount = nBodies - l;
                        if (tbody < amount) {
                            xcopy[tbody] = positions[l + tbody,0];
                            ycopy[tbody] = positions[l + tbody,1];
                            zcopy[tbody] = positions[l + tbody,2];
                            mcopy[tbody] = mass[l + tbody];
                        }
                        barrier(local);
                        for (reg int i = 0; i < amount; i++) {
                            const float diff_x = xcopy[i] - pos0;
                            const float diff_y = ycopy[i] - pos1;
                            const float diff_z = zcopy[i] - pos2;
                            const float distsq = diff_x * diff_x + diff_y * 
                                    diff_y + diff_z * diff_z + softsq;
                            const float factor = mcopy[i] / (distsq * 
                                    sqrt(distsq));
                            acc0 = acc0 + diff_x * factor;
                            acc1 = acc1 + diff_y * factor;
                            acc2 = acc2 + diff_z * factor;
                        }
                        barrier(local);
                    }
                    accel[body,0] = acc0;
                    accel[body,1] = acc1;
                    accel[body,2] = acc2;
                }
            }
        }
    }
}

/*
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(4473,5,<100,20>,<100,25>): Var accel[body,2]:
  in foreach loop wtbody:
    does benefit from cache l2_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(4431,5,<99,20>,<99,25>): Var accel[body,1]:
  in foreach loop wtbody:
    does benefit from cache l2_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(4389,5,<98,20>,<98,25>): Var accel[body,0]:
  in foreach loop wtbody:
    does benefit from cache l2_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(3490,4,<81,43>,<81,47>): Var mass[l + tbody]:
  in foreach loop wtbody:
    does benefit from cache l2_cache:
      4 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(2241,4,<59,39>,<59,43>): Var mass[k + tbody]:
  in loop k:
    may benefit from cache l2_cache:
      best case: nBodies / 16 cache line fetches
      worst case: nBodies / 128 cache line fetches
  in foreach loop wtbody:
    does benefit from cache l2_cache:
      4 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(3289,9,<78,43>,<78,52>): Var positions[l + tbody,0]:
  in foreach loop wtbody:
    does benefit from cache l2_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(2178,9,<58,39>,<58,48>): Var positions[k + tbody,2]:
  in loop k:
    may benefit from cache l2_cache:
      best case: 3 * nBodies / 16 cache line fetches
      worst case: nBodies / 128 cache line fetches
  in foreach loop wtbody:
    does benefit from cache l2_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(3423,9,<80,43>,<80,52>): Var positions[l + tbody,2]:
  in foreach loop wtbody:
    does benefit from cache l2_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(2115,9,<57,39>,<57,48>): Var positions[k + tbody,1]:
  in loop k:
    may benefit from cache l2_cache:
      best case: 24 * nBodies / 128 cache line fetches
      worst case: nBodies / 128 cache line fetches
  in foreach loop wtbody:
    does benefit from cache l2_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(1803,9,<52,39>,<52,48>): Var positions[bodyOffset,2]:
  in foreach loop wtbody:
    does benefit from cache l2_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(1739,9,<51,39>,<51,48>): Var positions[bodyOffset,1]:
  in foreach loop wtbody:
    does benefit from cache l2_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(3356,9,<79,43>,<79,52>): Var positions[l + tbody,1]:
  in foreach loop wtbody:
    does benefit from cache l2_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(1675,9,<50,39>,<50,48>): Var positions[bodyOffset,0]:
  in foreach loop wtbody:
    does benefit from cache l2_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(2052,9,<56,39>,<56,48>): Var positions[k + tbody,0]:
  in loop k:
    may benefit from cache l2_cache:
      best case: 24 * nBodies / 128 cache line fetches
      worst case: nBodies / 128 cache line fetches
  in foreach loop wtbody:
    does benefit from cache l2_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(4473,5,<100,20>,<100,25>): Var accel[body,2]:
  in foreach loop wtbody:
    does benefit from cache l1_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(4431,5,<99,20>,<99,25>): Var accel[body,1]:
  in foreach loop wtbody:
    does benefit from cache l1_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(4389,5,<98,20>,<98,25>): Var accel[body,0]:
  in foreach loop wtbody:
    does benefit from cache l1_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(3490,4,<81,43>,<81,47>): Var mass[l + tbody]:
  in foreach loop wtbody:
    does benefit from cache l1_cache:
      4 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(2241,4,<59,39>,<59,43>): Var mass[k + tbody]:
  in loop k:
    may benefit from cache l1_cache:
      best case: nBodies / 16 cache line fetches
      worst case: nBodies / 128 cache line fetches
  in foreach loop wtbody:
    does benefit from cache l1_cache:
      4 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(3289,9,<78,43>,<78,52>): Var positions[l + tbody,0]:
  in foreach loop wtbody:
    does benefit from cache l1_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(2178,9,<58,39>,<58,48>): Var positions[k + tbody,2]:
  in loop k:
    may benefit from cache l1_cache:
      best case: 24 * nBodies / 128 cache line fetches
      worst case: nBodies / 128 cache line fetches
  in foreach loop wtbody:
    does benefit from cache l1_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(3423,9,<80,43>,<80,52>): Var positions[l + tbody,2]:
  in foreach loop wtbody:
    does benefit from cache l1_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(2115,9,<57,39>,<57,48>): Var positions[k + tbody,1]:
  in loop k:
    may benefit from cache l1_cache:
      best case: 24 * nBodies / 128 cache line fetches
      worst case: nBodies / 128 cache line fetches
  in foreach loop wtbody:
    does benefit from cache l1_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(1803,9,<52,39>,<52,48>): Var positions[bodyOffset,2]:
  in foreach loop wtbody:
    does benefit from cache l1_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(1739,9,<51,39>,<51,48>): Var positions[bodyOffset,1]:
  in foreach loop wtbody:
    does benefit from cache l1_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(3356,9,<79,43>,<79,52>): Var positions[l + tbody,1]:
  in foreach loop wtbody:
    does benefit from cache l1_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(1675,9,<50,39>,<50,48>): Var positions[bodyOffset,0]:
  in foreach loop wtbody:
    does benefit from cache l1_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(2052,9,<56,39>,<56,48>): Var positions[k + tbody,0]:
  in loop k:
    may benefit from cache l1_cache:
      best case: 24 * nBodies / 128 cache line fetches
      worst case: nBodies / 128 cache line fetches
  in foreach loop wtbody:
    does benefit from cache l1_cache:
      12 cache line fetches
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(128,19,<22,12>,<22,31>): pcie transfers 16 * nBodies + 16 bytes from host to device
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(128,19,<22,12>,<22,31>): pcie transfers 12 * nCompute bytes from device to host
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(4031,5,<90,49>,<90,54>): Data reuse: For mcopy[i]: 
    the loops reg int i = 0  have a positive data reuse ratio: 0
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(3817,5,<87,49>,<87,54>): Data reuse: For zcopy[i]: 
    the loops reg int i = 0  have a positive data reuse ratio: 0
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(3751,5,<86,49>,<86,54>): Data reuse: For ycopy[i]: 
    the loops reg int i = 0  have a positive data reuse ratio: 0
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(3685,5,<85,49>,<85,54>): Data reuse: For xcopy[i]: 
    the loops reg int i = 0  have a positive data reuse ratio: 0
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(1803,9,<52,39>,<52,48>): Data reuse: For positions[bodyOffset,2]:
  For dimension 0:
    the loops const int wtbody0, const int wtbody may have a positive data reuse ratio: 128 / (start + 128)
    the loops const int bbody, const int wtbody may have a positive data reuse ratio: (nCompute + 127) / (nCompute + start + 63) / 2
    the loops const int bbody, const int wtbody0 may have a positive data reuse ratio: (nCompute + 127) / (nCompute + start + 64) / 64
  For dimension 1:
    the loops const int wtbody0, const int wtbody  have a positive data reuse ratio: 42.66666667
    the loops const int bbody, const int wtbody may have a positive data reuse ratio: (nCompute + 127) / 6
    the loops const int bbody, const int wtbody0 may have a positive data reuse ratio: (nCompute + 127) / 192
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(1739,9,<51,39>,<51,48>): Data reuse: For positions[bodyOffset,1]:
  For dimension 0:
    the loops const int wtbody0, const int wtbody may have a positive data reuse ratio: 128 / (start + 128)
    the loops const int bbody, const int wtbody may have a positive data reuse ratio: (nCompute + 127) / (nCompute + start + 63) / 2
    the loops const int bbody, const int wtbody0 may have a positive data reuse ratio: (nCompute + 127) / (nCompute + start + 64) / 64
  For dimension 1:
    the loops const int wtbody0, const int wtbody  have a positive data reuse ratio: 64
    the loops const int bbody, const int wtbody may have a positive data reuse ratio: (nCompute + 127) / 4
    the loops const int bbody, const int wtbody0 may have a positive data reuse ratio: (nCompute + 127) / 128
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(1675,9,<50,39>,<50,48>): Data reuse: For positions[bodyOffset,0]:
  For dimension 0:
    the loops const int wtbody0, const int wtbody may have a positive data reuse ratio: 128 / (start + 128)
    the loops const int bbody, const int wtbody may have a positive data reuse ratio: (nCompute + 127) / (nCompute + start + 63) / 2
    the loops const int bbody, const int wtbody0 may have a positive data reuse ratio: (nCompute + 127) / (nCompute + start + 64) / 64
  For dimension 1:
    the loops const int wtbody0, const int wtbody  have a positive data reuse ratio: 128
    the loops const int bbody, const int wtbody may have a positive data reuse ratio: (nCompute + 127) / 2
    the loops const int bbody, const int wtbody0 may have a positive data reuse ratio: (nCompute + 127) / 64
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(128,19,<22,12>,<22,31>): computation:
  workitems:
    loads: 
      local: 4*l*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute+
      4*amount*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute (may not be accurate: control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(3228,14,<77,28>,<77,42>), control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(3129,11,<75,24>,<75,35>), control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(1486,20,<46,20>,<46,40>))
      main: l*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute+amount*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute (may not be accurate: control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(3129,11,<75,24>,<75,35>), control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(1486,20,<46,20>,<46,40>))
      global: 4*l*nrBlocksNCompute*nrThreadsNCompute^(-1)*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute+
      7*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute (may not be accurate: control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(3228,14,<77,28>,<77,42>), control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(3129,11,<75,24>,<75,35>), control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(1486,20,<46,20>,<46,40>))
    instructions: 
      18*l*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute+
      18*amount*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute (may not be accurate: control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(3228,14,<77,28>,<77,42>), control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(3129,11,<75,24>,<75,35>), control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(1486,20,<46,20>,<46,40>))
    stores: 
      local: 4*l*nrBlocksNCompute*nrThreadsNCompute^(-1)*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute+
      4*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute (may not be accurate: control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(3228,14,<77,28>,<77,42>), control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(3129,11,<75,24>,<75,35>), control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(1486,20,<46,20>,<46,40>))
      main: l*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute+amount*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute (may not be accurate: control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(3129,11,<75,24>,<75,35>), control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(1486,20,<46,20>,<46,40>))
      global: 3*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute (may not be accurate: control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(3228,14,<77,28>,<77,42>), control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(3129,11,<75,24>,<75,35>), control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(1486,20,<46,20>,<46,40>))
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(128,19,<22,12>,<22,31>): indexing:
  workitems:
    instructions: 
      4*l*nrBlocksNCompute*nrThreadsNCompute^(-1)*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute+
      4*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute (may not be accurate: control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(3228,14,<77,28>,<77,42>), control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(3129,11,<75,24>,<75,35>), control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(1486,20,<46,20>,<46,40>))
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(128,19,<22,12>,<22,31>): control flow:
  workitems:
    instructions: 
      2*l*nrBlocksNCompute*nrThreadsNCompute^(-1)*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute+
      2*l*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute+
      2*amount*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute+
      10*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute (may not be accurate: control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(3129,11,<75,24>,<75,35>), control flow at |project://mcl/input/programs/barnes-hd7970.mcl|(1486,20,<46,20>,<46,40>))
  host:
    instructions: 
      4
  workgroups:
    instructions: 
      2*nrBlocksNCompute
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(128,19,<22,12>,<22,31>): Arithmetic intensity: (18*l*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute+
18*amount*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute)*(
8*l*nrBlocksNCompute*nrThreadsNCompute^(-1)*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute+
6*l*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute+
6*amount*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute+
14*nrBlocksNCompute*nrWavefrontsNrThreadsNCompute*nrWorkitemsNrThreadsNCompute)^(
-1)
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(128,19,<22,12>,<22,31>): Memory on_chip is shared by more than one workgroup, carefully consider the usage of memory spaces {"local"}
INFO at |project://mcl/input/programs/barnes-hd7970.mcl|(1803,9,<52,39>,<52,48>): For positions[bodyOffset,2]:
  For dimension 1:
    the loops const int wtbody0, const int wtbody have a positive data reuse ratio: a factor 42.66666667
      memory space local may be leveraged
*/

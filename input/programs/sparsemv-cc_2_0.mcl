/*
 * Copyright 2014 Pieter Hijma
 *
 * This file is part of MCL.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */



module sparsemv


import perfect;
import gpu;
import nvidia;
import cc_2_0;





cc_2_0 void sparsemv(const int n = 16384, const int m = 65536, const int nz = 524288, const int[n + 1] 
        air, const int[nz] ajc, const float[nz] avalues, const float[m] b, 
        float[n] c) {
    const int nrThreadsN = 32;
    const int elementsPerThread = 32;
    const int blockSize = nrThreadsN * elementsPerThread;
    const int nrBlocksN = n / blockSize;
    foreach (const int barow in nrBlocksN blocks) {
        const int nrThreadsNrThreadsN = 
                cc_2_0.hierarchy.blocks.block.warps.warp.threads.nr_units;
        const int nrWarpsNrThreadsN = nrThreadsN / (1 * nrThreadsNrThreadsN);
        foreach (const int wtarow in nrWarpsNrThreadsN warps) {
            foreach (const int ttarow in nrThreadsNrThreadsN threads) {
                const int tarow = wtarow * (1 * nrThreadsNrThreadsN) + ttarow;
                for (local int el = 0; el < elementsPerThread; el++) {
                    const int arow = barow * blockSize + tarow * 
                            elementsPerThread + el;
                    local float sum = 0;
                    const int start = air[arow];
                    const int end = air[arow + 1];
                    for (local int i = start; i < end; i++) {
                        sum = sum + avalues[i] * b[ajc[i]];
                    }
                    c[arow] = sum;
                }
            }
        }
    }
}

/*
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(1406,1,<36,20>,<36,21>): Var c[arow]:
  in loop el:
    may benefit from cache l1_cache:
      best case: 1 cache line fetches
      worst case: 32 cache line fetches
  in foreach loop ttarow:
    does not benefit from cache l1_cache:
      32 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(1353,1,<34,49>,<34,50>): Var b[ajc[i]]:: unpredictable access pattern
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(1340,7,<34,36>,<34,43>): Var avalues[i]:
  in loop i:
    may benefit from cache l1_cache:
      best case: end / 32 + start / -32 cache line fetches
      worst case: -1 * start + end cache line fetches
 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(943,2,<27,31>,<27,33>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(792,6,<25,31>,<25,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(474,5,<20,23>,<20,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(724,6,<24,27>,<24,33>))
  in foreach loop ttarow:
    the array index depends on the loop index, but not directly. Cache behaviour cannot be predicted.
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(1355,3,<34,51>,<34,54>): Var ajc[i]:
  in loop i:
    may benefit from cache l1_cache:
      best case: end / 32 + start / -32 cache line fetches
      worst case: -1 * start + end cache line fetches
 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(943,2,<27,31>,<27,33>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(792,6,<25,31>,<25,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(474,5,<20,23>,<20,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(724,6,<24,27>,<24,33>))
  in foreach loop ttarow:
    the array index depends on the loop index, but not directly. Cache behaviour cannot be predicted.
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(1227,3,<32,36>,<32,39>): Var air[arow + 1]:
  in loop el:
    may benefit from cache l1_cache:
      best case: 1 cache line fetches
      worst case: 32 cache line fetches
  in foreach loop ttarow:
    does not benefit from cache l1_cache:
      32 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(1180,3,<31,38>,<31,41>): Var air[arow]:
  in loop el:
    may benefit from cache l1_cache:
      best case: 1 cache line fetches
      worst case: 32 cache line fetches
  in foreach loop ttarow:
    does not benefit from cache l1_cache:
      32 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(1406,1,<36,20>,<36,21>): Var c[arow]:
  in loop el:
    may benefit from cache l2_cache:
      best case: 1 cache line fetches
      worst case: 32 cache line fetches
  in foreach loop ttarow:
    does not benefit from cache l2_cache:
      32 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(1353,1,<34,49>,<34,50>): Var b[ajc[i]]:: unpredictable access pattern
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(1340,7,<34,36>,<34,43>): Var avalues[i]:
  in loop i:
    may benefit from cache l2_cache:
      best case: end / 32 + start / -32 cache line fetches
      worst case: -1 * start + end cache line fetches
 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(943,2,<27,31>,<27,33>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(792,6,<25,31>,<25,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(474,5,<20,23>,<20,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(724,6,<24,27>,<24,33>))
  in foreach loop ttarow:
    the array index depends on the loop index, but not directly. Cache behaviour cannot be predicted.
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(1355,3,<34,51>,<34,54>): Var ajc[i]:
  in loop i:
    may benefit from cache l2_cache:
      best case: end / 32 + start / -32 cache line fetches
      worst case: -1 * start + end cache line fetches
 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(943,2,<27,31>,<27,33>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(792,6,<25,31>,<25,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(474,5,<20,23>,<20,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(724,6,<24,27>,<24,33>))
  in foreach loop ttarow:
    the array index depends on the loop index, but not directly. Cache behaviour cannot be predicted.
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(1227,3,<32,36>,<32,39>): Var air[arow + 1]:
  in loop el:
    may benefit from cache l2_cache:
      best case: 1 cache line fetches
      worst case: 32 cache line fetches
  in foreach loop ttarow:
    does not benefit from cache l2_cache:
      32 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(1180,3,<31,38>,<31,41>): Var air[arow]:
  in loop el:
    may benefit from cache l2_cache:
      best case: 1 cache line fetches
      worst case: 32 cache line fetches
  in foreach loop ttarow:
    does not benefit from cache l2_cache:
      32 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(93,8,<13,12>,<13,20>): pcie transfers 4 * m + (4 * n + 8 * nz) + 16 bytes from host to device
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(93,8,<13,12>,<13,20>): pcie transfers 4 * n bytes from device to host
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(1355,3,<34,51>,<34,54>): Data reuse: For ajc[i]:
    the loops const int barow, const int wtarow  have a positive data reuse ratio: 16
    the loops const int wtarow, local int el = 0  have a positive data reuse ratio: 32
    the loops const int barow, const int ttarow  have a positive data reuse ratio: 512
    the loops const int wtarow, const int ttarow  have a positive data reuse ratio: 32
    the loops const int ttarow, local int el = 0  have a positive data reuse ratio: 1024
    the loops const int barow, local int i = start may have a positive data reuse ratio: (16 * end + -16 * start) / (end + -1 * start)
    the loops local int el = 0, local int i = start may have a positive data reuse ratio: (32 * end + -32 * start) / (end + -1 * start)
    the loops const int barow, local int el = 0  have a positive data reuse ratio: 512
    the loops const int ttarow, local int i = start may have a positive data reuse ratio: (32 * end + -32 * start) / (end + -1 * start)
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(1353,1,<34,49>,<34,50>): Data reuse: For b[ajc[i]]:
    the loops const int barow, const int wtarow may have a positive data reuse ratio: 16 / (ajc[((i))] + 1)
    the loops const int wtarow, local int el = 0 may have a positive data reuse ratio: 32 / (ajc[((i))] + 1)
    the loops const int barow, const int ttarow may have a positive data reuse ratio: 512 / (ajc[((i))] + 1)
    the loops const int wtarow, local int i = start may have a positive data reuse ratio: (end + -1 * start) / (ajc[((i))] + 1)
    the loops const int wtarow, const int ttarow may have a positive data reuse ratio: 32 / (ajc[((i))] + 1)
    the loops const int ttarow, local int el = 0 may have a positive data reuse ratio: 1024 / (ajc[((i))] + 1)
    the loops const int barow, local int i = start may have a positive data reuse ratio: (16 * end + -16 * start) / (ajc[((i))] + 1)
    the loops local int el = 0, local int i = start may have a positive data reuse ratio: (32 * end + -32 * start) / (ajc[((i))] + 1)
    the loops const int barow, local int el = 0 may have a positive data reuse ratio: 512 / (ajc[((i))] + 1)
    the loops const int ttarow, local int i = start may have a positive data reuse ratio: (32 * end + -32 * start) / (ajc[((i))] + 1)
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(1340,7,<34,36>,<34,43>): Data reuse: For avalues[i]:
    the loops const int barow, const int wtarow  have a positive data reuse ratio: 16
    the loops const int wtarow, local int el = 0  have a positive data reuse ratio: 32
    the loops const int barow, const int ttarow  have a positive data reuse ratio: 512
    the loops const int wtarow, const int ttarow  have a positive data reuse ratio: 32
    the loops const int ttarow, local int el = 0  have a positive data reuse ratio: 1024
    the loops const int barow, local int i = start may have a positive data reuse ratio: (16 * end + -16 * start) / (end + -1 * start)
    the loops local int el = 0, local int i = start may have a positive data reuse ratio: (32 * end + -32 * start) / (end + -1 * start)
    the loops const int barow, local int el = 0  have a positive data reuse ratio: 512
    the loops const int ttarow, local int i = start may have a positive data reuse ratio: (32 * end + -32 * start) / (end + -1 * start)
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(93,8,<13,12>,<13,20>): computation:
  threads:
    loads: 
      local: elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN*(-start+end)+elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(943,2,<27,31>,<27,33>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(792,6,<25,31>,<25,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(474,5,<20,23>,<20,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(724,6,<24,27>,<24,33>))
      global: 2*elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN*(-start+end) (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(943,2,<27,31>,<27,33>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(792,6,<25,31>,<25,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(474,5,<20,23>,<20,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(724,6,<24,27>,<24,33>))
    instructions: 
      2*elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN*(-start+end) (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(943,2,<27,31>,<27,33>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(792,6,<25,31>,<25,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(474,5,<20,23>,<20,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(724,6,<24,27>,<24,33>))
    stores: 
      local: elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN*(-start+end)+elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(943,2,<27,31>,<27,33>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(792,6,<25,31>,<25,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(474,5,<20,23>,<20,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(724,6,<24,27>,<24,33>))
      global: elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(943,2,<27,31>,<27,33>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(792,6,<25,31>,<25,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(474,5,<20,23>,<20,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(724,6,<24,27>,<24,33>))
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(93,8,<13,12>,<13,20>): indexing:
  threads:
    loads: 
      local: 2*elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN*(-start+end) (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(943,2,<27,31>,<27,33>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(792,6,<25,31>,<25,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(474,5,<20,23>,<20,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(724,6,<24,27>,<24,33>))
      global: elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN*(-start+end) (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(943,2,<27,31>,<27,33>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(792,6,<25,31>,<25,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(474,5,<20,23>,<20,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(724,6,<24,27>,<24,33>))
    instructions: 
      elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(943,2,<27,31>,<27,33>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(792,6,<25,31>,<25,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(474,5,<20,23>,<20,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(724,6,<24,27>,<24,33>))
    stores: 
      local: 0 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(943,2,<27,31>,<27,33>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(792,6,<25,31>,<25,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(474,5,<20,23>,<20,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(724,6,<24,27>,<24,33>))
      global: 0 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(943,2,<27,31>,<27,33>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(792,6,<25,31>,<25,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(474,5,<20,23>,<20,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(724,6,<24,27>,<24,33>))
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(93,8,<13,12>,<13,20>): control flow:
  threads:
    loads: 
      local: 2*elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN*(-start+end)+
      3*elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(943,2,<27,31>,<27,33>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(792,6,<25,31>,<25,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(474,5,<20,23>,<20,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(724,6,<24,27>,<24,33>))
      global: 2*elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN
    instructions: 
      2*elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN*(-start+end)+
      6*elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN+3*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(943,2,<27,31>,<27,33>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(792,6,<25,31>,<25,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(474,5,<20,23>,<20,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(724,6,<24,27>,<24,33>))
    stores: 
      local: elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN*(-start+end)+2*elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN+nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(943,2,<27,31>,<27,33>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(792,6,<25,31>,<25,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(474,5,<20,23>,<20,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(724,6,<24,27>,<24,33>))
  host:
    instructions: 
      2
  blocks:
    instructions: 
      2*nrBlocksN
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(93,8,<13,12>,<13,20>): Arithmetic intensity: 2*elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN*(-start+end)*(
4*elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN*(-start+end)+
3*elementsPerThread*nrBlocksN*nrThreadsNrThreadsN*nrWarpsNrThreadsN)^(-1)
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(93,8,<13,12>,<13,20>): Memory on_chip is shared by more than one block, carefully consider the usage of memory spaces {"shared"}
INFO at |project://mcl/input/programs/sparsemv-cc_2_0.mcl|(193,3,<14,8>,<14,11>): An example value for air is needed for performance evaluation
*/

/*
 * Copyright 2014 Pieter Hijma
 *
 * This file is part of MCL.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */



module sparsemv


import perfect;
import gpu;
import nvidia;
import cc_2_0;


// Attempt to avoid cache problems accessing avalues and ajc. Use a warp to compute an element,
// so that each thread can walk through the avalues and ajc arrays in steps of 32.
// This requires some shared memory to store temporary results, and a reduction in the end.


cc_2_0 void sparsemv(const int n = 16384, const int m = 65536, const int nz = 524288, const int[n + 1] 
        air, const int[nz] ajc, const float[nz] avalues, const float[m] b, 
        float[n] c) {
    const int nrThreadsPerBlock = 256;
    const int nElementsPerWarp = 1;
    const int nrThreadsNrThreadsN = 
        cc_2_0.hierarchy.blocks.block.warps.warp.threads.nr_units;	// should be 32.
    const int nrWarpsPerBlock = nrThreadsPerBlock / nrThreadsNrThreadsN;
    const int blockSize = nrWarpsPerBlock * nElementsPerWarp;
    const int nrBlocksN = n / blockSize;
    foreach (const int barow in nrBlocksN blocks) {
        shared float[nrWarpsPerBlock, nrThreadsNrThreadsN] vals;
        shared int[nrWarpsPerBlock, 2] airCp;
        foreach (const int wtarow in nrWarpsPerBlock warps) {
            foreach (const int ttarow in nrThreadsNrThreadsN threads) {
            	for (int el = 0; el < nElementsPerWarp; el++) {
	                const int arow = barow * blockSize + el * nrWarpsPerBlock + wtarow;
           			if (ttarow < 2) {
            			airCp[wtarow, ttarow] = air[arow + ttarow];
            		}
            		const int start = airCp[wtarow, 0];
	                const int end = airCp[wtarow, 1];
	                const int start2 = (start + (nrThreadsNrThreadsN  - 1)) / nrThreadsNrThreadsN * nrThreadsNrThreadsN;
	                float sum = 0;
	                const int diff = start2 - start;
	                if (diff != 0) {
	                	if (ttarow < diff) {
	                		sum = avalues[start + ttarow] * b[ajc[start+ttarow]];
	                	}
	                }
	                for (local int i = start2 + ttarow; i < end; i += nrThreadsNrThreadsN) {
	                    sum = sum + avalues[i] * b[ajc[i]];
	                }
	                vals[wtarow, ttarow] = sum;
	                // Parallel reduction
	                if (ttarow < 16) {
	                	sum = sum + vals[wtarow, ttarow + 16];
	                 	vals[wtarow, ttarow] = sum;
	                }
	                if (ttarow < 8) {
	                	sum = sum + vals[wtarow, ttarow + 8];
	                	vals[wtarow, ttarow] = sum;
	                }
	                if (ttarow < 4) {
	                	sum = sum + vals[wtarow, ttarow + 4];
	                	vals[wtarow, ttarow] = sum;
					}
					if (ttarow < 2) {
		            	sum = sum + vals[wtarow, ttarow + 2];
		                vals[wtarow, ttarow] = sum;
		            }
	                if (ttarow == 0) {
	                	c[arow] = sum + vals[wtarow, ttarow+1];
	                }
	            }
            }
        }
    }
}

/*
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2862,1,<67,18>,<67,19>): Var c[arow]:
  in loop el:
    may benefit from cache l1_cache:
      best case: 1 / 4 cache line fetches
      worst case: 1 cache line fetches
  in foreach loop ttarow:
    does benefit from cache l1_cache:
      1 cache line fetch
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1900,1,<42,51>,<42,52>): Var b[ajc[start + ttarow]]:: unpredictable access pattern
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2097,1,<46,46>,<46,47>): Var b[ajc[i]]:: unpredictable access pattern
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1874,7,<42,25>,<42,32>): Var avalues[start + ttarow]:
  in loop el:
    the array index depends on the loop index, but not directly. Cache behaviour cannot be predicted.
  in foreach loop ttarow:
    does benefit from cache l1_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2084,7,<46,33>,<46,40>): Var avalues[i]:
  in loop i:
    does not benefit from cache l1_cache:
      (start + ttarow) / -32 + (end - 31) / 32 cache line fetches
 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(948,5,<25,23>,<25,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1244,2,<30,22>,<30,24>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1181,6,<29,31>,<29,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1115,6,<28,27>,<28,33>))
  in foreach loop ttarow:
    the array index depends on the loop index, but not directly. Cache behaviour cannot be predicted.
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1902,3,<42,53>,<42,56>): Var ajc[start + ttarow]:
  in loop el:
    the array index depends on the loop index, but not directly. Cache behaviour cannot be predicted.
  in foreach loop ttarow:
    does benefit from cache l1_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2099,3,<46,48>,<46,51>): Var ajc[i]:
  in loop i:
    does not benefit from cache l1_cache:
      (start + ttarow) / -32 + (end - 31) / 32 cache line fetches
 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(948,5,<25,23>,<25,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1244,2,<30,22>,<30,24>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1181,6,<29,31>,<29,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1115,6,<28,27>,<28,33>))
  in foreach loop ttarow:
    the array index depends on the loop index, but not directly. Cache behaviour cannot be predicted.
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1439,3,<33,39>,<33,42>): Var air[arow + ttarow]:
  in loop el:
    may benefit from cache l1_cache:
      best case: 1 / 4 cache line fetches
      worst case: 1 cache line fetches
  in foreach loop ttarow:
    does benefit from cache l1_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2862,1,<67,18>,<67,19>): Var c[arow]:
  in loop el:
    may benefit from cache l2_cache:
      best case: 1 / 4 cache line fetches
      worst case: 1 cache line fetches
  in foreach loop ttarow:
    does benefit from cache l2_cache:
      1 cache line fetch
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1900,1,<42,51>,<42,52>): Var b[ajc[start + ttarow]]:: unpredictable access pattern
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2097,1,<46,46>,<46,47>): Var b[ajc[i]]:: unpredictable access pattern
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1874,7,<42,25>,<42,32>): Var avalues[start + ttarow]:
  in loop el:
    the array index depends on the loop index, but not directly. Cache behaviour cannot be predicted.
  in foreach loop ttarow:
    does benefit from cache l2_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2084,7,<46,33>,<46,40>): Var avalues[i]:
  in loop i:
    does not benefit from cache l2_cache:
      (start + ttarow) / -32 + (end - 31) / 32 cache line fetches
 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(948,5,<25,23>,<25,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1244,2,<30,22>,<30,24>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1181,6,<29,31>,<29,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1115,6,<28,27>,<28,33>))
  in foreach loop ttarow:
    the array index depends on the loop index, but not directly. Cache behaviour cannot be predicted.
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1902,3,<42,53>,<42,56>): Var ajc[start + ttarow]:
  in loop el:
    the array index depends on the loop index, but not directly. Cache behaviour cannot be predicted.
  in foreach loop ttarow:
    does benefit from cache l2_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2099,3,<46,48>,<46,51>): Var ajc[i]:
  in loop i:
    does not benefit from cache l2_cache:
      (start + ttarow) / -32 + (end - 31) / 32 cache line fetches
 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(948,5,<25,23>,<25,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1244,2,<30,22>,<30,24>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1181,6,<29,31>,<29,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1115,6,<28,27>,<28,33>))
  in foreach loop ttarow:
    the array index depends on the loop index, but not directly. Cache behaviour cannot be predicted.
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1439,3,<33,39>,<33,42>): Var air[arow + ttarow]:
  in loop el:
    may benefit from cache l2_cache:
      best case: 1 / 4 cache line fetches
      worst case: 1 cache line fetches
  in foreach loop ttarow:
    does benefit from cache l2_cache:
      1 cache line fetches
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(363,8,<15,12>,<15,20>): pcie transfers 4 * m + (4 * n + 8 * nz) + 16 bytes from host to device
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(363,8,<15,12>,<15,20>): pcie transfers 4 * n bytes from device to host
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2099,3,<46,48>,<46,51>): Data reuse: For ajc[i]:
    the loops const int ttarow, local int i = start2 + ttarow may have a positive data reuse ratio: (end + (-1 * start + (-1 * ttarow - 31))) / (end + (-1 * start + -1 * ttarow) - 31)
    the loops const int wtarow, int el = 0  have a positive data reuse ratio: 8
    the loops const int wtarow, const int ttarow  have a positive data reuse ratio: 256
    the loops const int barow, const int wtarow  have a positive data reuse ratio: 16384
    the loops const int ttarow, int el = 0  have a positive data reuse ratio: 32
    the loops const int wtarow, local int i = start2 + ttarow may have a positive data reuse ratio: ((end - 31) / 4 + (start + ttarow) / -4) / (end + (-1 * start + -1 * ttarow) - 31)
    the loops const int barow, int el = 0  have a positive data reuse ratio: 2048
    the loops const int barow, local int i = start2 + ttarow may have a positive data reuse ratio: (64 * end + (-64 * start + (-64 * ttarow - 1984))) / (end + (-1 * start + -1 * ttarow) - 31)
    the loops int el = 0, local int i = start2 + ttarow may have a positive data reuse ratio: ((end - 31) / 32 + (start + ttarow) / -32) / (end + (-1 * start + -1 * ttarow) - 31)
    the loops const int barow, const int ttarow  have a positive data reuse ratio: 65536
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2097,1,<46,46>,<46,47>): Data reuse: For b[ajc[i]]:
    the loops const int ttarow, local int i = start2 + ttarow may have a positive data reuse ratio: (end + (-1 * start + (-1 * ttarow - 31))) / (ajc[((i))] + 1)
    the loops const int wtarow, int el = 0 may have a positive data reuse ratio: 8 / (ajc[((i))] + 1)
    the loops const int wtarow, const int ttarow may have a positive data reuse ratio: 256 / (ajc[((i))] + 1)
    the loops const int barow, const int wtarow may have a positive data reuse ratio: 16384 / (ajc[((i))] + 1)
    the loops const int ttarow, int el = 0 may have a positive data reuse ratio: 32 / (ajc[((i))] + 1)
    the loops const int wtarow, local int i = start2 + ttarow may have a positive data reuse ratio: ((end - 31) / 4 + (start + ttarow) / -4) / (ajc[((i))] + 1)
    the loops const int barow, int el = 0 may have a positive data reuse ratio: 2048 / (ajc[((i))] + 1)
    the loops const int barow, local int i = start2 + ttarow may have a positive data reuse ratio: (64 * end + (-64 * start + (-64 * ttarow - 1984))) / (ajc[((i))] + 1)
    the loops int el = 0, local int i = start2 + ttarow may have a positive data reuse ratio: ((end - 31) / 32 + (start + ttarow) / -32) / (ajc[((i))] + 1)
    the loops const int barow, const int ttarow may have a positive data reuse ratio: 65536 / (ajc[((i))] + 1)
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2084,7,<46,33>,<46,40>): Data reuse: For avalues[i]:
    the loops const int ttarow, local int i = start2 + ttarow may have a positive data reuse ratio: (end + (-1 * start + (-1 * ttarow - 31))) / (end + (-1 * start + -1 * ttarow) - 31)
    the loops const int wtarow, int el = 0  have a positive data reuse ratio: 8
    the loops const int wtarow, const int ttarow  have a positive data reuse ratio: 256
    the loops const int barow, const int wtarow  have a positive data reuse ratio: 16384
    the loops const int ttarow, int el = 0  have a positive data reuse ratio: 32
    the loops const int wtarow, local int i = start2 + ttarow may have a positive data reuse ratio: ((end - 31) / 4 + (start + ttarow) / -4) / (end + (-1 * start + -1 * ttarow) - 31)
    the loops const int barow, int el = 0  have a positive data reuse ratio: 2048
    the loops const int barow, local int i = start2 + ttarow may have a positive data reuse ratio: (64 * end + (-64 * start + (-64 * ttarow - 1984))) / (end + (-1 * start + -1 * ttarow) - 31)
    the loops int el = 0, local int i = start2 + ttarow may have a positive data reuse ratio: ((end - 31) / 32 + (start + ttarow) / -32) / (end + (-1 * start + -1 * ttarow) - 31)
    the loops const int barow, const int ttarow  have a positive data reuse ratio: 65536
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1902,3,<42,53>,<42,56>): Data reuse: For ajc[start + ttarow]:
    the loops const int wtarow, int el = 0 may have a positive data reuse ratio: 8 / (start + 1)
    the loops const int wtarow, const int ttarow may have a positive data reuse ratio: 256 / (start + 32)
    the loops const int barow, const int wtarow may have a positive data reuse ratio: 16384 / (start + 1)
    the loops const int ttarow, int el = 0 may have a positive data reuse ratio: 32 / (start + 32)
    the loops const int barow, int el = 0 may have a positive data reuse ratio: 2048 / (start + 1)
    the loops const int barow, const int ttarow may have a positive data reuse ratio: 65536 / (start + 32)
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1900,1,<42,51>,<42,52>): Data reuse: For b[ajc[start + ttarow]]:
    the loops const int wtarow, int el = 0 may have a positive data reuse ratio: 8 / (ajc[((start) + (ttarow))] + 1)
    the loops const int wtarow, const int ttarow may have a positive data reuse ratio: 256 / (ajc[((start) + (ttarow))] + 1)
    the loops const int barow, const int wtarow may have a positive data reuse ratio: 16384 / (ajc[((start) + (ttarow))] + 1)
    the loops const int ttarow, int el = 0 may have a positive data reuse ratio: 32 / (ajc[((start) + (ttarow))] + 1)
    the loops const int barow, int el = 0 may have a positive data reuse ratio: 2048 / (ajc[((start) + (ttarow))] + 1)
    the loops const int barow, const int ttarow may have a positive data reuse ratio: 65536 / (ajc[((start) + (ttarow))] + 1)
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1874,7,<42,25>,<42,32>): Data reuse: For avalues[start + ttarow]:
    the loops const int wtarow, int el = 0 may have a positive data reuse ratio: 8 / (start + 1)
    the loops const int wtarow, const int ttarow may have a positive data reuse ratio: 256 / (start + 32)
    the loops const int barow, const int wtarow may have a positive data reuse ratio: 16384 / (start + 1)
    the loops const int ttarow, int el = 0 may have a positive data reuse ratio: 32 / (start + 32)
    the loops const int barow, int el = 0 may have a positive data reuse ratio: 2048 / (start + 1)
    the loops const int barow, const int ttarow may have a positive data reuse ratio: 65536 / (start + 32)
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1439,3,<33,39>,<33,42>): Data reuse: For air[arow + ttarow]:
    the loops const int wtarow, const int ttarow  have a positive data reuse ratio: 6.564102564
    the loops const int barow, const int ttarow  have a positive data reuse ratio: 3.994149196
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(363,8,<15,12>,<15,20>): computation:
  threads:
    loads: 
      shared: 5*nElementsPerWarp*nrBlocksN*nrThreadsNrThreadsN*nrWarpsPerBlock (may not be accurate: control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2232,11,<50,21>,<50,32>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2829,11,<66,21>,<66,32>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2547,10,<58,21>,<58,31>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2679,10,<62,9>,<62,19>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2391,10,<54,21>,<54,31>))
      global: 2*nElementsPerWarp*nrBlocksN*nrWarpsPerBlock*(-ttarow-start2+end)+2*nElementsPerWarp*nrBlocksN*nrThreadsNrThreadsN*nrWarpsPerBlock (may not be accurate: control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1797,9,<40,21>,<40,30>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1244,2,<30,22>,<30,24>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(948,5,<25,23>,<25,28>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2829,11,<66,21>,<66,32>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1181,6,<29,31>,<29,37>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1832,13,<41,22>,<41,35>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1115,6,<28,27>,<28,33>))
    instructions: 
      2*nElementsPerWarp*nrBlocksN*nrWarpsPerBlock*(-ttarow-start2+end)+6*nElementsPerWarp*nrBlocksN*nrThreadsNrThreadsN*nrWarpsPerBlock (may not be accurate: control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1797,9,<40,21>,<40,30>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1244,2,<30,22>,<30,24>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(948,5,<25,23>,<25,28>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2232,11,<50,21>,<50,32>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2829,11,<66,21>,<66,32>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2547,10,<58,21>,<58,31>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1181,6,<29,31>,<29,37>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1832,13,<41,22>,<41,35>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1115,6,<28,27>,<28,33>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2679,10,<62,9>,<62,19>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2391,10,<54,21>,<54,31>))
    stores: 
      shared: 5*nElementsPerWarp*nrBlocksN*nrThreadsNrThreadsN*nrWarpsPerBlock (may not be accurate: control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2232,11,<50,21>,<50,32>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2829,11,<66,21>,<66,32>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2547,10,<58,21>,<58,31>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2679,10,<62,9>,<62,19>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2391,10,<54,21>,<54,31>))
      global: nElementsPerWarp*nrBlocksN*nrThreadsNrThreadsN*nrWarpsPerBlock (may not be accurate: control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1797,9,<40,21>,<40,30>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1244,2,<30,22>,<30,24>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(948,5,<25,23>,<25,28>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2829,11,<66,21>,<66,32>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1181,6,<29,31>,<29,37>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1832,13,<41,22>,<41,35>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1115,6,<28,27>,<28,33>))
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(363,8,<15,12>,<15,20>): indexing:
  threads:
    loads: 
      local: 2*nElementsPerWarp*nrBlocksN*nrWarpsPerBlock*(-ttarow-start2+end) (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1244,2,<30,22>,<30,24>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(948,5,<25,23>,<25,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1181,6,<29,31>,<29,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1115,6,<28,27>,<28,33>))
      global: nElementsPerWarp*nrBlocksN*nrWarpsPerBlock*(-ttarow-start2+end)+nElementsPerWarp*nrBlocksN*nrThreadsNrThreadsN*nrWarpsPerBlock (may not be accurate: control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1797,9,<40,21>,<40,30>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1244,2,<30,22>,<30,24>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(948,5,<25,23>,<25,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1181,6,<29,31>,<29,37>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1832,13,<41,22>,<41,35>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1115,6,<28,27>,<28,33>))
    instructions: 
      8*nElementsPerWarp*nrBlocksN*nrThreadsNrThreadsN*nrWarpsPerBlock (may not be accurate: control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1797,9,<40,21>,<40,30>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1386,10,<32,18>,<32,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1244,2,<30,22>,<30,24>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(948,5,<25,23>,<25,28>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2232,11,<50,21>,<50,32>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2829,11,<66,21>,<66,32>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2547,10,<58,21>,<58,31>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1181,6,<29,31>,<29,37>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1832,13,<41,22>,<41,35>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1115,6,<28,27>,<28,33>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2679,10,<62,9>,<62,19>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2391,10,<54,21>,<54,31>))
    stores: 
      local: 0 (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1244,2,<30,22>,<30,24>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(948,5,<25,23>,<25,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1181,6,<29,31>,<29,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1115,6,<28,27>,<28,33>))
      global: 0 (may not be accurate: control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1797,9,<40,21>,<40,30>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1244,2,<30,22>,<30,24>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(948,5,<25,23>,<25,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1181,6,<29,31>,<29,37>), control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1832,13,<41,22>,<41,35>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1115,6,<28,27>,<28,33>))
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(363,8,<15,12>,<15,20>): control flow:
  threads:
    loads: 
      local: 2*nElementsPerWarp*nrBlocksN*nrWarpsPerBlock*(-ttarow-start2+end) (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1244,2,<30,22>,<30,24>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(948,5,<25,23>,<25,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1181,6,<29,31>,<29,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1115,6,<28,27>,<28,33>))
      shared: 2*nElementsPerWarp*nrBlocksN*nrThreadsNrThreadsN*nrWarpsPerBlock (may not be accurate: control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1386,10,<32,18>,<32,28>))
      global: nElementsPerWarp*nrBlocksN*nrThreadsNrThreadsN*nrWarpsPerBlock (may not be accurate: control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1386,10,<32,18>,<32,28>))
    instructions: 
      2*nElementsPerWarp*nrBlocksN*nrWarpsPerBlock*(-ttarow-start2+end)+12*nElementsPerWarp*nrBlocksN*nrThreadsNrThreadsN*nrWarpsPerBlock (may not be accurate: control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1386,10,<32,18>,<32,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1244,2,<30,22>,<30,24>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(948,5,<25,23>,<25,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1181,6,<29,31>,<29,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1115,6,<28,27>,<28,33>))
    stores: 
      local: nElementsPerWarp*nrBlocksN*nrWarpsPerBlock*(-ttarow-start2+end)+nElementsPerWarp*nrBlocksN*nrThreadsNrThreadsN*nrWarpsPerBlock (may not be accurate: depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1244,2,<30,22>,<30,24>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(948,5,<25,23>,<25,28>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1181,6,<29,31>,<29,37>), depends on loop at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1115,6,<28,27>,<28,33>))
      shared: nElementsPerWarp*nrBlocksN*nrThreadsNrThreadsN*nrWarpsPerBlock (may not be accurate: control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1386,10,<32,18>,<32,28>))
      global: 0 (may not be accurate: control flow at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(1386,10,<32,18>,<32,28>))
  host:
    instructions: 
      3
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(363,8,<15,12>,<15,20>): Arithmetic intensity: (2*nElementsPerWarp*nrBlocksN*nrWarpsPerBlock*(-ttarow-start2+end)+6*nElementsPerWarp*nrBlocksN*nrThreadsNrThreadsN*nrWarpsPerBlock)*(
2*nElementsPerWarp*nrBlocksN*nrWarpsPerBlock*(-ttarow-start2+end)+13*nElementsPerWarp*nrBlocksN*nrThreadsNrThreadsN*nrWarpsPerBlock)^(
-1)
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(363,8,<15,12>,<15,20>): Memory on_chip is shared by more than one block, carefully consider the usage of memory spaces {"shared"}
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2435,4,<55,30>,<55,34>): For vals[wtarow,ttarow + 8]:
  For dimension 1:
    the loops const int wtarow, const int ttarow have a positive data reuse ratio: a factor 6.4
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2878,4,<67,34>,<67,38>): For vals[wtarow,ttarow + 1]:
  For dimension 1:
    the loops const int wtarow, const int ttarow have a positive data reuse ratio: a factor 7.757575758
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2591,4,<59,30>,<59,34>): For vals[wtarow,ttarow + 4]:
  For dimension 1:
    the loops const int wtarow, int el = 0 have a positive data reuse ratio: a factor 1.6
    the loops const int wtarow, const int ttarow have a positive data reuse ratio: a factor 7.111111111
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2277,4,<51,30>,<51,34>): For vals[wtarow,ttarow + 16]:
  For dimension 1:
    the loops const int wtarow, const int ttarow have a positive data reuse ratio: a factor 5.333333333
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2720,4,<63,27>,<63,31>): For vals[wtarow,ttarow + 2]:
  For dimension 1:
    the loops const int wtarow, int el = 0 have a positive data reuse ratio: a factor 2.666666667
    the loops const int wtarow, const int ttarow have a positive data reuse ratio: a factor 7.529411765
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2323,4,<52,19>,<52,23>): instruction vals[wtarow,ttarow] has 0 bank conflicts
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2277,4,<51,30>,<51,34>): instruction vals[wtarow,ttarow + 16] has 0 bank conflicts
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2764,4,<64,18>,<64,22>): instruction vals[wtarow,ttarow] has 0 bank conflicts
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2435,4,<55,30>,<55,34>): instruction vals[wtarow,ttarow + 8] has 0 bank conflicts
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2878,4,<67,34>,<67,38>): instruction vals[wtarow,ttarow + 1] has 0 bank conflicts
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2479,4,<56,18>,<56,22>): instruction vals[wtarow,ttarow] has 0 bank conflicts
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2144,4,<48,17>,<48,21>): instruction vals[wtarow,ttarow] has 0 bank conflicts
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2635,4,<60,18>,<60,22>): instruction vals[wtarow,ttarow] has 0 bank conflicts
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(463,3,<16,8>,<16,11>): An example value for air is needed for performance evaluation
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2591,4,<59,30>,<59,34>): instruction vals[wtarow,ttarow + 4] has 0 bank conflicts
INFO at |project://mcl/input/programs/sparsemv-cc_2_0-v1.mcl|(2720,4,<63,27>,<63,31>): instruction vals[wtarow,ttarow + 2] has 0 bank conflicts



openCL.run(NDRange(262144, 8), NDRange(32, 8)
pre                      : avg = 4.43 ms, total = 13.3 ms, count =         3

sparsemvKernel           : avg = 4.43 ms, total = 4.43 ms, count =         1

sparsemvKernel           : avg = 4.43 ms, total = 8.87 ms, count =         2

sparsemvKernel           : avg = 4.43 ms, total = 13.3 ms, count =         3

sparsemvKernel           : avg = 4.43 ms, total = 17.7 ms, count =         4

sparsemvKernel           : avg = 4.43 ms, total = 22.2 ms, count =         5

Bandwidth: 14.66 GB/s

*/

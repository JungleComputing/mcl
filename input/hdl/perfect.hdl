/*
 * Copyright 2014 Pieter Hijma
 *
 * This file is part of MCL.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */



hardware_description perfect


parallelism hierarchy {
	memory_space main {
		consistency = full;
		default;
	}
	
	par_group threads {
		max_nr_units = countable;
		par_unit thread {
			memory_space reg {
				consistency = full;
				default;
			}
		}
	}
}


device perfect {
	mem;
	ic;
	cores;
}


memory mem {
	space(main);
	capacity = countable B;
}

memory regs {
	space(reg);
	capacity = countable B;
	addressable = false;
}


interconnect ic {
	connects(mem, cores.core[*]);
	latency = 1 cycle;
	bandwidth = countable bit/s;
}


execution_group cores {
	max_nr_units = countable;
	execution_unit core {
	
		ls_units;
		regs;
		slots(thread, 1);
		
		instructions ops {
			op((+), 1);
			op((-), 1);
		}
	}
}


load_store_group ls_units {
	max_nr_units = countable;
	
	load_store_unit ls_unit {
		slots(thread, 1);
		
		instructions ls_ops {
			op("load", 1);
			op("store", 1);
		}
	}
}

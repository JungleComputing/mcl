/*
 * Copyright 2014 Pieter Hijma
 *
 * This file is part of MCL.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */



hardware_description gpu 

specializes accelerator;

parallelism hierarchy {
    memory_space dev {
		consistency = barrier;
		default;
    }

    par_group blocks {
		max_nr_units = 65000;
	
		par_unit block {
	
		    memory_space local {
				consistency = barrier;
		    }
	
		    par_group threads {
				max_nr_units = 1024;
	
				perfect.hierarchy.threads.thread;
		    }
		}
    }
}

device host {
}

interconnect pcie {
    connects(host, gpu.mem);
    latency = 1000 cycle;
    bandwidth = 8 GB/s;
}

device gpu {
    mem;
    ic;
    processors;
}

memory mem {
    space(dev);
    capacity = 2 GB;
}

memory on_chip {
    space(local);
    capacity = 16 kB;
}

memory regs {
	space(reg);
	capacity = 400 B;
	addressable = false;
}

interconnect ic {
    connects(mem, processors.processor[*]);
    latency = 20 cycles;
}

execution_group processors {
    nr_units = 16;

    execution_unit processor {
		slots(block, 1);

		on_chip;
		ls_units;	
		regs;
	
		execution_group alus {
		    nr_units = 32;
		    
		    execution_unit alu {
				slots(thread, 1);
				
				perfect.cores.core.ops;
		    }
		}
    }
}


load_store_group ls_units {
	max_nr_units = 32;
	
	perfect.ls_units.ls_unit;
}

